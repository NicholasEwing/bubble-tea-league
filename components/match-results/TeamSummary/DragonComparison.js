import React from "react";

export default function DragonComparison({ dragonEvents }) {
  const blueTeamDragonKills = dragonEvents.filter((event) => {
    return event.killerTeamId === 100;
  });

  const redTeamDragonKills = dragonEvents.filter((event) => {
    return event.killerTeamId === 200;
  });

  const OceanIcon = () => (
    <svg
      className="icon"
      width="18px"
      height="18px"
      viewBox="0 0 14 18"
      xmlns="https://www.w3.org/2000/svg"
    >
      <path
        className="shape"
        fill="#67C4B0"
        d="M14,11.272025 C14,9.952875 12.87125,9.44695 12.87125,9.44695 C12.87125,9.44695 13.38225,8.4323 13.38225,7.648825 C13.38225,4.919525 11.339125,2 7.911225,2 C3.984225,2 2.41325,6.1566 2.41325,6.1566 C2.41325,6.1566 1.932875,5.452575 2.08425,3.761025 C2.08425,3.761025 0,5.522225 0,9.19355 C0,12.138275 2.055375,15.65 5.7512,15.65 C8.239,15.65 9.910075,13.554725 9.910075,11.2869 C9.910075,9.141925 8.16095,7.872475 6.523125,7.872475 C5.453525,7.872475 4.567675,8.64755 4.567675,8.64755 C4.86745,7.1303 6.50195,6.52375 6.50195,6.52375 C7.092925,3.727425 10.506825,4.049425 10.506825,4.049425 C10.506825,4.049425 9.08005,4.797375 8.588475,6.1524 C8.588475,6.1524 12.0211,7.341525 12.0211,11.19765 C12.0211,13.94445 10.213875,15.407275 10.213875,15.407275 C10.213875,15.407275 11.930625,14.51145 13.0858,12.63615 C13.323975,12.94065 13.347075,13.3806 13.347075,13.3806 C13.347075,13.3806 14,12.591175 14,11.272025"
      ></path>
    </svg>
  );

  const InfernalIcon = () => (
    <svg
      className="icon"
      width="18px"
      height="18px"
      viewBox="0 0 14 18"
      xmlns="https://www.w3.org/2000/svg"
    >
      <path
        className="shape"
        fill="#F26C23"
        d="M6.185725,0 C6.185725,0 6.68325,2.9099 6.23805,3.343375 C5.79285,3.77685 2.274125,7.10675 2.274125,7.10675 L1.1004,5.78095 L0,9.82625 C0,9.82625 1.6954,11.38935 2.48955,14.728 L7,17 L13.4652,12.0666 L14,9.041025 L12.7162,7.765625 C12.7162,7.765625 12.951225,9.4052 12.354825,9.4052 C11.75825,9.4052 10.6764,6.8957 9.88715,6.8957 C9.098075,6.8957 8.401575,7.10115 6.9097,7.4508 C5.718475,7.7301 5.26015,9.698675 5.12365,10.48075 C5.090225,10.6729 5.171425,10.8668 5.33435,10.97985 L6.9097,12.347825 C6.9097,12.347825 8.385125,11.378325 8.385125,10.723825 C8.385125,10.221575 7.146825,10.252025 7.146825,9.30265 C7.146825,8.75 7.6391,8.52985 8.262625,8.52985 C9.99355,8.52985 10.6708,10.5721 10.6708,10.5721 C9.404675,13.03785 6.9951,14.595 6.9951,14.595 C6.9951,14.595 3.436475,12.154625 3.436475,10.63195 C3.436475,6.427225 8.33595,5.31125 8.33595,5.31125 L8.98555,3.1598 L6.185725,0 Z"
      ></path>
    </svg>
  );

  const CloudIcon = () => (
    <svg
      className="icon"
      width="18px"
      height="18px"
      viewBox="0 0 14 18"
      xmlns="https://www.w3.org/2000/svg"
    >
      <path
        className="shape"
        fill="#ADD2ED"
        d="M3.839325,1 C3.839325,1 8.2243,2.667575 8.2243,6.623975 C8.2243,10.4591 1.939175,10.2722 1.939175,14.969375 C1.939175,15.96705 2.63515,17.3401 2.63515,17.3401 C2.63515,17.3401 0,15.71505 0,13.447575 C0,9.575175 4.95565,11.117975 4.95565,4.486 C4.95565,2.01885 3.839325,1 3.839325,1 M12.4478333,8.7884625 C12.4478333,10.2183875 11.3421833,12.5586625 8.51803332,12.5586625 C4.30910832,12.5586625 3.72618332,14.4448125 3.72618332,14.4448125 C2.98505832,11.7594375 10.5375333,9.9887875 10.5375333,5.9735875 C10.5375333,4.1395875 9.63558332,3.1321125 9.63558332,3.1321125 C9.63558332,3.1321125 12.4478333,5.0774125 12.4478333,8.7884625 M4.55,15.75691 C5.138175,14.079535 6.3917,13.71641 6.3917,13.71641 C6.3917,13.71641 7.9394,14.238085 8.6177,14.238085 C11.88495,14.238085 13.846175,10.297785 13.846175,10.297785 C13.846175,10.297785 14.870975,13.87391 11.552275,17.450035 C11.552275,17.450035 9.60295,15.161035 7.14315,15.161035 C5.651975,15.161035 4.55,15.75691 4.55,15.75691"
      ></path>
    </svg>
  );

  const MountainIcon = () => (
    <svg
      className="icon"
      width="18px"
      height="18px"
      viewBox="0 0 14 18"
      xmlns="https://www.w3.org/2000/svg"
    >
      <path
        className="shape"
        fill="#A8805D"
        d="M3,4.5 L6,16 L5,17 L1,12.0302388 L1,7.07612197 L3,4.5 Z M6.50012207,13 L4.5,3 L6,1 L8,1 L9.5,3 L7.5,13 L6.50012207,13 Z M11,4.5 L13,7.07612197 L13,12.0302388 L9,17 L8,16 L11,4.5 Z"
      ></path>
    </svg>
  );

  const HextechIcon = () => (
    <svg
      className="icon"
      width="18px"
      height="18px"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
    >
      <path
        className="shape"
        fill="#81D9F5"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M13.4142 3V5.78423L20 12.2808L13.4142 18.7773L11.0572 21V19.2414L4 12.2808L11.0572 5.32019L13.4142 3ZM15.1231 10.1346L17 11.9822L12 16.9041L7.00003 11.9822L8.87694 10.1346L12 13.2089L15.1231 10.1346ZM14.0624 9.09049L12 11.1207L9.9376 9.09055L12 7.06034L14.0624 9.09049Z"
      ></path>
    </svg>
  );

  const ElderIcon = () => (
    <svg
      className="icon"
      width="18px"
      height="18px"
      viewBox="0 0 14 18"
      xmlns="https://www.w3.org/2000/svg"
    >
      <path
        className="shape"
        fill="#C9BCDC"
        d="M9.282525,10.64335 C8.611225,11.44178.069075,11.3129 8.069075,11.3129 L8.5337,10.192725 L9.721425,9.252625 C9.721425,9.252625 9.953825,9.845 9.282525,10.64335 M7.843325,16.17685 C7.843325,16.17685 7.503475,15.613875 7.33355,15.332475 L6.999825,15.84645 L6.6661,15.332475 C6.496175,15.613875 6.156325,16.17685 6.156325,16.17685 C6.156325,16.17685 5.438825,15.278575 5.438825,14.298925 C5.438825,13.31945 5.6182,12.50605 5.6182,12.50605 L6.107325,13.987425 L6.49425,13.6978 C6.49425,13.6978 6.605025,14.05165 6.999825,14.5693 C7.39445,14.05165 7.505225,13.6978 7.505225,13.6978 L7.892325,13.987425 L8.381275,12.50605 C8.381275,12.50605 8.560825,13.31945 8.560825,14.298925 C8.560825,15.278575 7.843325,16.17685 7.843325,16.17685 M4.149775,9.252625 L5.424125,10.192725 L5.922875,11.4956 C5.922875,11.4956 4.149775,11.213325 4.149775,9.252625 M9.493575,-0.0005 L9.02265,0.513475 L9.194325,4.331625 C9.194325,4.331625 10.231725,5.096725 10.231725,6.0405 C10.231725,6.730525 9.767975,7.222975 9.276225,7.222975 C8.56765,7.222975 8.02585,6.47275 8.29395,5.55505 L7.000175,3.375775 L6.999825,3.375775 L5.705875,5.55505 C5.973975,6.47275 5.432175,7.222975 4.723775,7.222975 C4.232025,7.222975 3.768275,6.730525 3.768275,6.0405 C3.768275,5.096725 4.8055,4.331625 4.8055,4.331625 L4.977175,0.513475 L4.50625,-0.0005 C4.50625,3.448925 0,6.669975 0,10.24505 C0,12.510425 2.260475,13.944725 2.260475,16.217625 C2.260475,16.217625 2.6649,15.643625 2.6649,14.24555 C2.6649,12.8473 2.1504,12.74125 2.1504,11.87395 C2.1504,11.006825 2.927225,10.17225 2.927225,10.17225 C2.927225,11.666925 4.60985,12.917825 4.60985,13.628675 C4.60985,14.612525 5.48485,17.4995 7,17.4995 C8.514975,17.4995 9.39015,14.612525 9.39015,13.628675 C9.39015,12.917825 11.0726,11.666925 11.0726,10.17225 C11.0726,10.17225 11.849425,11.006825 11.849425,11.87395 C11.849425,12.74125 11.334925,12.8473 11.334925,14.24555 C11.334925,15.643625 11.73935,16.217625 11.73935,16.217625 C11.73935,13.944725 14,12.510425 14,10.24505 C14,6.669975 9.493575,3.448925 9.493575,-0.0005"
      ></path>
    </svg>
  );

  function renderDragonIcon(dragonType) {
    switch (dragonType) {
      case "WATER_DRAGON":
        return <OceanIcon />;
      case "FIRE_DRAGON":
        return <InfernalIcon />;
      case "CLOUD_DRAGON":
        return <CloudIcon />;
      case "EARTH_DRAGON":
        return <MountainIcon />;
      case "HEXTECH_DRAGON":
        return <HextechIcon />;
      case "ELDER_DRAGON":
        return <ElderIcon />;
      default:
        return <p>Icon not found. Go yell at Nick!</p>;
    }
  }

  const DragonIcon = ({ dragonType }) => (
    <span className="ml-2 h-4 w-3 inline-block">
      {renderDragonIcon(dragonType)}
    </span>
  );

  return (
    <div className="dragons flex mb-4">
      <span className="blue-team flex-1">
        {blueTeamDragonKills?.map((kill, i) => (
          <DragonIcon key={i} dragonType={kill.monsterSubType} />
        ))}
      </span>
      <span className="label text-center flex-1 text-[#8fa3b0] tracking-widest font-semibold text-sm">
        DRAGONS
      </span>
      <span className="red-team flex-1 text-right">
        {redTeamDragonKills?.map((kill, i) => (
          <DragonIcon key={i} dragonType={kill.monsterSubType} />
        ))}
      </span>
    </div>
  );
}
