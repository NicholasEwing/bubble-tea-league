generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model MatchRoundPlayerStats {
  id                   Int      @id @default(autoincrement())
  kills                Int      @db.UnsignedInt
  assists              Int      @db.UnsignedInt
  deaths               Int      @db.UnsignedInt
  champLevel           Int      @db.UnsignedInt
  goldEarned           Int      @db.UnsignedInt
  visionScore          Int      @db.UnsignedInt
  firstBlood           Boolean
  totalDmgToChamps     Int      @db.UnsignedInt
  kda                  Int      @db.UnsignedInt
  championName         String   @db.VarChar(255)
  championTransform    Int      @default(0) @db.UnsignedInt
  item0                Int      @db.UnsignedInt
  item1                Int      @db.UnsignedInt
  item2                Int      @db.UnsignedInt
  item3                Int      @db.UnsignedInt
  item4                Int      @db.UnsignedInt
  item5                Int      @db.UnsignedInt
  item6                Int      @db.UnsignedInt
  summoner1Id          Int      @db.UnsignedInt
  summoner2Id          Int      @db.UnsignedInt
  teamPosition         String   @db.VarChar(255)
  totalMinionsKilled   Int
  statPerks            String   @db.VarChar(255)
  primaryRunePath      Int      @db.UnsignedInt
  primaryRunePerks     String   @db.VarChar(255)
  secondaryRunePath    Int      @db.UnsignedInt
  secondaryRunePerks   String   @db.VarChar(255)
  killParticipation    String   @db.VarChar(255)
  teamDamagePercentage String   @db.VarChar(255)
  wardsPlaced          Int      @db.UnsignedInt
  wardTakedowns        Int      @db.UnsignedInt
  summonerName         String   @db.VarChar(255)
  attackDamage         Int      @db.UnsignedInt
  abilityPower         Int      @db.UnsignedInt
  attackSpeed          Int      @db.UnsignedInt
  lifesteal            Int      @db.UnsignedInt
  armor                Int      @db.UnsignedInt
  magicResist          Int      @db.UnsignedInt
  teamSide             String   @db.VarChar(255)
  createdAt            DateTime @db.DateTime(0)
  updatedAt            DateTime @db.DateTime(0)
  MatchRoundId         Int?
  PlayerId             Int?
}

model MatchRoundTeamStats {
  id                  Int      @id @default(autoincrement())
  kills               Int      @db.UnsignedInt
  goldEarned          Int      @db.UnsignedInt
  towersDestroyed     Int      @db.UnsignedInt
  heraldsKilled       Int      @db.UnsignedInt
  dragonsKilled       Int      @db.UnsignedInt
  inhibitorsDestroyed Int      @db.UnsignedInt
  baronsKilled        Int      @db.UnsignedInt
  createdAt           DateTime @db.DateTime(0)
  updatedAt           DateTime @db.DateTime(0)
  MatchRoundId        Int?
  TeamId              Int?
}

model MatchRounds {
  id             Int      @id @default(autoincrement())
  gameId         String?  @db.VarChar(255)
  tournamentCode String   @db.VarChar(255)
  metaData       String?  @db.VarChar(255)
  gameDuration   Int?     @db.UnsignedInt
  createdAt      DateTime @db.DateTime(0)
  updatedAt      DateTime @db.DateTime(0)
  MatchId        Int?
  winningTeamId  Int?
  redTeamId      Int?
  blueTeamId     Int?
}

model Matches {
  id                Int       @id @default(autoincrement())
  isPlayoffsMatch   Boolean
  isUpperBracket    Boolean?
  bracketRound      Int?      @db.UnsignedInt
  scheduledTime     DateTime? @db.DateTime(0)
  vodLink           String?   @unique(map: "vodLink") @db.VarChar(255)
  createdAt         DateTime  @db.DateTime(0)
  updatedAt         DateTime  @db.DateTime(0)
  season            Int?      @db.UnsignedInt
  matchWinnerTeamId Int?
  matchLoserTeamId  Int?
  teamOne           Int?
  teamTwo           Int?
}

model PlayerTeamHistories {
  id   Int     @id @default(autoincrement())
  role String? @default("Fill") @db.VarChar(255)
}

model Players {
  id           Int      @id @default(autoincrement())
  PUUID        String   @unique(map: "PUUID") @db.VarChar(255)
  summonerName String   @unique(map: "summonerName") @db.VarChar(255)
  discordName  String   @unique(map: "discordName") @db.VarChar(255)
  email        String?  @unique(map: "email") @db.VarChar(255)
  firstName    String?  @db.VarChar(255)
  lastName     String?  @db.VarChar(255)
  isFreeAgent  Boolean  @default(false)
  createdAt    DateTime @db.DateTime(0)
  updatedAt    DateTime @db.DateTime(0)
}

model Providers {
  id         Int      @id @default(autoincrement())
  providerId Int      @unique(map: "providerId") @db.UnsignedInt
  createdAt  DateTime @db.DateTime(0)
  updatedAt  DateTime @db.DateTime(0)
}

model Seasons {
  number       Int      @id @unique(map: "number") @default(autoincrement()) @db.UnsignedInt
  tournamentId Int      @unique(map: "tournamentId") @db.UnsignedInt
  year         Int      @db.UnsignedInt
  createdAt    DateTime @db.DateTime(0)
  updatedAt    DateTime @db.DateTime(0)
}

model SequelizeMeta {
  name String @id @unique(map: "name") @db.VarChar(255)
}

model TeamStandings {
  id        Int @id @default(autoincrement())
  placement Int
}

model Teams {
  id          Int      @id @default(autoincrement())
  teamName    String   @unique(map: "teamName") @db.VarChar(255)
  logoImgPath String?  @db.VarChar(255)
  description String?  @db.Text
  tricode     String?  @unique(map: "tricode") @db.VarChar(255)
  season      Int      @db.UnsignedInt
  createdAt   DateTime @db.DateTime(0)
  updatedAt   DateTime @db.DateTime(0)
}
