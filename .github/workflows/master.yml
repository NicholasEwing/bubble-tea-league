# name: Deploy to live URL

# on:
#   push:
#     branches:
#       - master

# jobs:
#   deploy:d
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - uses: jakejarvis/s3-sync-action@master
#         with:
#           args: --acl public-read --follow-symlinks --delete --exclude '.git*/*' --exclude 'README.md'
#         env:
#           AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

name: AWS Lambda Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ECR_IMAGE_TAG: latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: btl-stats
        run: |
          docker build \
            --build-arg DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            --build-arg DB_USERNAME="${{ secrets.DB_PASSWORD }}" \
            --build-arg RDS_HOST="${{ secrets.RDS_HOST }}" \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.ECR_IMAGE_TAG }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.ECR_IMAGE_TAG }}
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${{ env.ECR_IMAGE_TAG }}"
      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
          --function-name ${{ env.AWS_LAMBDA_FUNC_NAME }} \
          --image-uri "${{ secrets.AWS_ECR_IMAGE_URI }}:${{ env.ECR_IMAGE_TAG }}"
        env:
          AWS_LAMBDA_FUNC_NAME: btl-stats-lambda
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
